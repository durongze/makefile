cmake_minimum_required(VERSION 3.15)
project (json)

set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

include_directories(${CMAKE_CURRENT_LIST_DIR}/)

file(GLOB JsonSRCS   RELATIVE ${CMAKE_CURRENT_LIST_DIR}  ./*.c* ./*.h*)
file(GLOB JsonHDRS   RELATIVE ${CMAKE_CURRENT_LIST_DIR}  ./*.h*)

set (JSON_HDRS  ${JsonHDRS})

set(ALL_FILES
    ${JsonSRCS}
)

#list(REMOVE_ITEM JsonSRCS   xxx.c)
set(JSON_STATIC json_static)
add_library               (${JSON_STATIC} STATIC  ${ALL_FILES}       )
target_include_directories(${JSON_STATIC} PRIVATE ${JSON_INC_DIR}   ${ZLIB_INCLUDE_DIRS})
target_link_directories   (${JSON_STATIC} PRIVATE ${JSON_SRC_DIR}/  ${ZLIB_LIBRARY_DIRS})
target_compile_definitions(${JSON_STATIC} PRIVATE
	HAVE_CONFIG_H
)

set(JSON_SHARED JSON_shared)
add_library               (${JSON_SHARED} SHARED  ${ALL_FILES})
target_include_directories(${JSON_SHARED} PRIVATE ${JSON_INC_DIR}   ${ZLIB_INCLUDE_DIRS} )
target_link_directories   (${JSON_SHARED} PRIVATE ${JSON_SRC_DIR}/  ${ZLIB_LIBRARY_DIRS} )
target_link_libraries     (${JSON_SHARED} PRIVATE ws2_32 wsock32    ${ZLIB_LIBRARIES}    )
target_compile_definitions(${JSON_SHARED} PRIVATE
	HAVE_CONFIG_H
)


SET(install_targets ${JSON_STATIC}    )
SET(install_hdr_dir include)

set_target_properties(${JSON_STATIC} PROPERTIES PUBLIC_HEADER "${JSON_HDRS}")

INSTALL(TARGETS ${install_targets}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        PUBLIC_HEADER DESTINATION ${install_hdr_dir}
       )

install(FILES ${JSON_HDRS} DESTINATION ${install_hdr_dir})
install(DIRECTORY "inc_sub_dir" DESTINATION ${install_hdr_dir} FILES_MATCHING PATTERN "*.h")